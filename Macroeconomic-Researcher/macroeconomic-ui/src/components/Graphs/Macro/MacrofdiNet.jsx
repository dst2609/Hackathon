import React, { useEffect, useState } from "react";
import { Chart } from "react-google-charts";
import { useSelector } from "react-redux";

export const data = [
    ['Year', 'China', 'India', 'United States'],
    [1960, 0, 0, 0],
    [1961, 0, 0, 0],
    [1962, 0, 0, 0],
    [1963, 0, 0, 0],
    [1964, 0, 0, 0],
    [1965, 0, 0, 0],
    [1966, 0, 0, 0],
    [1967, 0, 0, 0],
    [1968, 0, 0, 0],
    [1969, 0, 0, 0],
    [1970, 5270000000, 0, 0],
    [1971, 4850000000, 0, 0],
    [1972, 6060000000, 0, 0],
    [1973, 7410000000, 0, 0],
    [1974, 1620000000, 0, 0],
    [1975, 10326246.71, 11420000000, 0],
    [1976, 7706430.543, 8410000000, 0],
    [1977, 0, 8360000000, 0],
    [1978, 0, 8870000000, 0],
    [1979, 0, 16670000000, 0],
    [1980, 0, 2300000000, 0],
    [1981, 0, -15570000000, 0],
    [1982, -386000000, 0, -13456000000],
    [1983, -543000000, 0, -2730000000],
    [1984, -1124000000, 0, -12410000000],
    [1985, -1030000000, 0, -5950000000],
    [1986, -1425000000, 0, -11422000000],
    [1987, -1669000000, 0, -23438000000],
    [1988, -2344000000, 0, -35209000000],
    [1989, -2613000000, 0, -24800000000],
    [1990, -2657000000, 0, -11290000000],
    [1991, -3453000000, -73537638.39, 14720000000],
    [1992, -7156000000, -276512439, 28460000000],
    [1993, -23115000000, -550019384.4, 32570000000],
    [1994, -31787000000, -890688166, 34050000000],
    [1995, -33849200000, -2026439031, 40980000000],
    [1996, -38066000000, -2186732315, 5360000000],
    [1997, -41674000000, -3464411052, -770000000],
    [1998, -41117000000, -2587058630, -36390000000],
    [1999, -36978000000, -2089233597, -64964000000],
    [2000, -37483300000, -3074684332, -162755000000],
    [2001, -37357000000, -4073961343, -26455000000],
    [2002, -46789569179, -3947895992, 67930000000],
    [2003, -49444853744, -2444138426, 78112000000],
    [2004, -60144670468, -3592188066, 160363000000],
    [2005, -90379127564, -4628652265, -89753000000],
    [2006, -100150000000, -5992285935, -14662000000],
    [2007, -139095000000, -8201628958, 177277000000],
    [2008, -114792000000, -24149749830, 2491000000],
    [2009, -87167067370, -19485789183, 151514000000],
    [2010, -185750000000, -11428785746, 85789000000],
    [2011, -231652000000, -23890659988, 173119000000],
    [2012, -176250000000, -15442447343, 126895000000],
    [2013, -217958000000, -26388082470, 104665000000],
    [2014, -144968000000, -22890162761, 135673000000],
    [2015, -68098649765, -36495216491, -209363000000],
    [2016, 41674876170, -39411278940, -174573000000],
    [2017, -27790987920, -28875941053, 28590000000],
    [2018, -92338473352, -30699661201, -345435000000],
    [2019, -50259822365, -37469945322, -201057000000],
    [2020, -99374807720, -53239697391, 148299000000],
    [2021, -165277000000, -27488543123, -99015000000],
    [2022, -30474555668, -35408008686, 38173000000],
    [2023, 0, 0, 0]
]

export function MacrofdiNet(props) {

    const [chartData, setchartData] = useState([]);
    const range = useSelector((state) => state.countryRange.range);
    const country = useSelector((state) => state.countryRange.country);
    const filterData = () => {
      let filteredData = [["year", country]];
      let col = 0;
      if (country == "USA") {
        col = 3;
      } else if (country == "INDIA") {
        col = 1;
      } else if (country == "China") {
        col = 2;
      } else {
        setchartData(data);
        return;
      }
      let startYear = range[0];
      let endYear = range[1];
      for (let i = 1; i < data.length; i++) {
        let currYear = data[i][0];
        if (currYear <= endYear && currYear >= startYear) {
          filteredData.push([currYear, data[i][col]]);
        }
      }
      setchartData(filteredData);
    };
  
    useEffect(() => {
      console.log(range, country);
      filterData();
    }, [range, country]);
  
    return (
      <div style={{ marginBottom: "20px" }}>
        <Chart
          chartType="LineChart"
          width="100%"
          height="250px"
          data={chartData}
          options={{
            hAxis: {
              format: "#", // Use 'decimal' format to display integers without commas
            },
          }}
        />
      </div>
    );
  }
  
  export default MacrofdiNet;
  