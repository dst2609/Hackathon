import React, { useEffect, useState } from "react";
import { Chart } from "react-google-charts";
import { useSelector } from "react-redux";

export const data = [
  ['Year', 'China', 'India', 'United States'],
  [1960, 0, 0, 0],
  [1961, 0, 0, 0],
  [1962, 0, 0, 0],
  [1963, 0, 0, 0],
  [1964, 0, 0, 0],
  [1965, 0, 0, 0],
  [1966, 0, 0, 0],
  [1967, 0, 0, 0],
  [1968, 0, 0, 0],
  [1969, 0, 0, 0],
  [1970, 6490000000, 0, 0],
  [1971, 5620000000, 0, 0],
  [1972, 7330000000, 0, 0],
  [1973, 9340000000, 0, 0],
  [1974, 5160000000, 0, 0],
  [1975, 0, 13730000000, 0],
  [1976, 0, 11320000000, 0],
  [1977, 0, 11280000000, 0],
  [1978, 0, 14370000000, 0],
  [1979, 0, 24720000000, 0],
  [1980, 4000000, 19040000000, 0],
  [1981, 2000000, 10110000000, 0],
  [1982, 44000000, 1000000, 7774000000],
  [1983, 93000000, 5000000, 8770000000],
  [1984, 134000000, 4000000, 12820000000],
  [1985, 629000000, 3000000, 3680000000],
  [1986, 450000000, -1000000, 19524000000],
  [1987, 645000000, 5000000, 39797000000],
  [1988, 850000000, 11000000, 21701000000],
  [1989, 780000000, 10000000, 50980000000],
  [1990, 830000000, 6000000, 59940000000],
  [1991, 913000000, -11000000, 49270000000],
  [1992, 4000000000, 24000000, 58770000000],
  [1993, 4400000000, 350640.5619, 82800000000],
  [1994, 2000000000, 82583302.7, 89990000000],
  [1995, 2000000000, 117189079.2, 110060000000],
  [1996, 2114000000, 239324706.5, 103020000000],
  [1997, 3765000000, 112918990.4, 121380000000],
  [1998, 4527000000, 47593027.49, 174760000000],
  [1999, 4036000000, 79357457.32, 247485000000],
  [2000, 4612000000, 509532974.7, 186370000000],
  [2001, 9696000000, 1054132218, 146041000000],
  [2002, 6284049719, 1261071115, 178985000000],
  [2003, 8456083724, 1237846245, 195218000000],
  [2004, 7972601714, 1837062923, 374004000000],
  [2005, 13729566303, 2640754960, 52591000000],
  [2006, 23932198468, 14036833332, 283801000000],
  [2007, 17154799702, 17026111929, 523890000000],
  [2008, 56742276630, 19256527246, 343583000000],
  [2009, 43889985500, 16095583747, 312597000000],
  [2010, 57953599366, 15968099288, 349828000000],
  [2011, 48420641060, 12607994610, 436616000000],
  [2012, 64963386524, 8553237671, 377240000000],
  [2013, 72970879683, 1764948800, 392796000000],
  [2014, 123130000000, 11686480933, 387529000000],
  [2015, 174391000000, 7514275639, 302071000000],
  [2016, 216424000000, 5047292606, 299815000000],
  [2017, 138293000000, 11090150305, 409413000000],
  [2018, 143027000000, 11417789536, -130720000000],
  [2019, 136910000000, 13140702032, 114927000000],
  [2020, 153721000000, 11122667604, 286662000000],
  [2021, 178798000000, 17238734439, 394070000000],
  [2022, 149692000000, 14532249718, 426251000000],
  [2023, 0, 0, 0]
]

export function MacroFdiOut(props) {

    const [chartData, setchartData] = useState([]);
    const range = useSelector((state) => state.countryRange.range);
    const country = useSelector((state) => state.countryRange.country);
    const filterData = () => {
      let filteredData = [["year", country]];
      let col = 0;
      if (country == "USA") {
        col = 3;
      } else if (country == "INDIA") {
        col = 1;
      } else if (country == "China") {
        col = 2;
      } else {
        setchartData(data);
        return;
      }
      let startYear = range[0];
      let endYear = range[1];
      for (let i = 1; i < data.length; i++) {
        let currYear = data[i][0];
        if (currYear <= endYear && currYear >= startYear) {
          filteredData.push([currYear, data[i][col]]);
        }
      }
      setchartData(filteredData);
    };
  
    useEffect(() => {
      console.log(range, country);
      filterData();
    }, [range, country]);
  
    return (
      <div style={{ marginBottom: "20px" }}>
        <Chart
          chartType="LineChart"
          width="100%"
          height="250px"
          data={chartData}
          options={{
            hAxis: {
              format: "#", // Use 'decimal' format to display integers without commas
            },
          }}
        />
      </div>
    );
  }
  
  export default MacroFdiOut;
  